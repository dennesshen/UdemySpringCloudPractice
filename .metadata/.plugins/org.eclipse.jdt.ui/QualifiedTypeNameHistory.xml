<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
    <fullyQualifiedTypeName name="javax.annotation.Resource"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
    <fullyQualifiedTypeName name="javax.annotation.Resources"/>
    <fullyQualifiedTypeName name="org.apache.commons.codec.Resources"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.web.WebProperties.Resources"/>
    <fullyQualifiedTypeName name="com.google.common.io.Resources"/>
    <fullyQualifiedTypeName name="com.netflix.client.util.Resources"/>
    <fullyQualifiedTypeName name="org.springframework.hateoas.CollectionModel"/>
    <fullyQualifiedTypeName name="com.udemy.limits_service.bean.Limits"/>
    <fullyQualifiedTypeName name="lombok.NonNull"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.AutoConfigureOrder"/>
    <fullyQualifiedTypeName name="com.udemy.limits_service.configuration.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.environment.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.udemy.microservices.currency_exchange_service.CurrencyExchangeRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.udemy.microservices.currency_exchange_service.CurrencyExchange"/>
    <fullyQualifiedTypeName name="javax.annotation.sql.DataSourceDefinition"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.websocket.server.UriTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.udemy.microservices.currency_conversion_service.CurrencyConversion"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.udemy.microservices.currency_conversion_service.CurrencyExchangeProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.apache.http.annotation.Contract"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.function.EntityResponse"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.ratelimiter.annotation.RateLimiter"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.bulkhead.annotation.Bulkhead"/>
</qualifiedTypeNameHistroy>
